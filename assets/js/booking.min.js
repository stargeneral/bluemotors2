jQuery(document).ready(function ($) { let bookingData = { service: null, vehicle: {}, appointment: {}, customer: {}, price: 0 }; let currentStep = 1; let stripe = null; let elements = null; let cardElement = null; if (typeof bms_ajax !== 'undefined' && bms_ajax.stripe_publishable_key) { stripe = Stripe(bms_ajax.stripe_publishable_key); elements = stripe.elements(); } $('#btn-lookup-vehicle').on('click', function (e) { e.preventDefault(); const registration = $('#vehicle-reg').val().replace(/\s/g, '').toUpperCase(); if (!registration || registration.length < 5) { showMessage('Please enter a valid registration number', 'error'); return; } $('#lookup-status').html('<div class="loading">Looking up vehicle...</div>'); $(this).prop('disabled', true); $.ajax({ url: bms_ajax.ajax_url, type: 'POST', data: { action: 'bms_vehicle_lookup', registration: registration, service_type: bookingData.service, nonce: bms_ajax.nonce }, success: function (response) { if (response.success) { bookingData.vehicle = response.data; bookingData.price = response.data.calculated_price; displayVehicleDetails(response.data); $('#lookup-status').empty(); $('#vehicle-details-display').slideDown(); } else { showMessage('Vehicle not found. Please check the registration or enter details manually.', 'error'); } }, error: function () { showMessage('An error occurred. Please try again or enter details manually.', 'error'); }, complete: function () { $('#btn-lookup-vehicle').prop('disabled', false); } }); }); function moveToStep(stepNumber) { $('.bms-step-content').hide(); $('#step-' + stepNumber + '-content').fadeIn(); $('.step').removeClass('active completed'); for (let i = 1; i < stepNumber; i++) { $('.step[data-step="' + i + '"]').addClass('completed'); } $('.step[data-step="' + stepNumber + '"]').addClass('active'); currentStep = stepNumber; $('html, body').animate({ scrollTop: $('.bms-booking-container').offset().top - 100 }, 500); switch (stepNumber) { case 1: $('.continue-section').remove(); break; case 2: $('#vehicle-reg').focus(); if (!bookingData.service) { moveToStep(1); showMessage('Please select a service first', 'error'); return; } break; case 3: if (!bookingData.service) { moveToStep(1); showMessage('Please select a service first', 'error'); return; } break; case 4: $('#customer-name').focus(); break; case 5: updateBookingSummary(); initializePayment(); break; } } function displayVehicleDetails(vehicleData) { $('#display-make').text(vehicleData.make || 'N/A'); $('#display-model').text(vehicleData.model || 'N/A'); $('#display-year').text(vehicleData.year || 'N/A'); $('#display-engine').text(vehicleData.engineCapacity || 'N/A'); $('#display-fuel').text(vehicleData.fuelType || 'N/A'); $('#service-price').text((vehicleData.calculated_price || 0).toFixed(2)); bookingData.vehicle = vehicleData; bookingData.price = vehicleData.calculated_price || 0; if (vehicleData.is_combo) { bookingData.motIncluded = true; bookingData.service = vehicleData.service_type; } if (typeof window.updateServicePricing === 'function') { window.updateServicePricing(vehicleData); } } function showMessage(message, type = 'info') { $('.bms-message').remove(); const messageHtml = ` <div class="bms-message bms-message-${type}"> ${message} <button type="button" class="message-close">&times;</button> </div> `; $('.bms-booking-container').prepend(messageHtml); setTimeout(() => { $('.bms-message').fadeOut(); }, 5000); $('.message-close').on('click', function () { $(this).parent().fadeOut(); }); } function updateBookingSummary() { let summaryHtml = '<div class="summary-section">'; if (bookingData.service) { summaryHtml += ` <div class="summary-item"> <strong>Service:</strong> ${getServiceName(bookingData.service)} <span class="summary-price">Â£${bookingData.price.toFixed(2)}</span> </div> `; } if (bookingData.vehicle.make) { summaryHtml += ` <div class="summary-item"> <strong>Vehicle:</strong> ${bookingData.vehicle.make} ${bookingData.vehicle.model} <span class="summary-detail">${bookingData.vehicle.registration || ''}</span> </div> `; } if (bookingData.appointment.date) { summaryHtml += ` <div class="summary-item"> <strong>Appointment:</strong> ${bookingData.appointment.date} <span class="summary-detail">${bookingData.appointment.time || ''}</span> </div> `; } summaryHtml += '</div>'; $('#booking-summary-details').html(summaryHtml); $('#total-amount').text(bookingData.price.toFixed(2)); } function getServiceName(serviceType) { const names = { 'interim_service': 'Interim Service', 'full_service': 'Full Service', 'mot_test': 'MOT Test' }; return names[serviceType] || serviceType; } function initializePayment() { if (stripe && elements) { console.log('Payment system ready'); } } window.moveToStep = moveToStep; window.bookingData = bookingData; $('#btn-continue-to-date').on('click', function () { moveToStep(3); }); $('#btn-continue-to-details').on('click', function () { moveToStep(4); }); $('#btn-continue-to-payment').on('click', function () { moveToStep(5); }); });